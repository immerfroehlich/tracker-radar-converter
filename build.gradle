/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.4.1/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.25'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/

plugins {
	// Apply the java plugin to add support for Java
	id 'java'
	
	// Apply the application plugin to add support for building an application
	id 'application'
	
	id 'eclipse'
}

allprojects {
    repositories {
        jcenter() 
    }
}

dependencies {
    //Apache Commons IO for File-Writing
    compile 'commons-io:commons-io:2.6'
    
    //Dependencies for Json
    compile 'org.glassfish.jersey.core:jersey-client:2.29.1'
    compile 'org.glassfish.jersey.inject:jersey-hk2:2.29.1'
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.29.1'
    
    //Jersey needs Java EE which was moved out of JDK now maintained by
    //Eclipse Foundation under the name Jakarta EE
    runtimeOnly 'jakarta.activation:jakarta.activation-api:1.2.2'
    runtimeOnly 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.3'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.+'
}

subprojects {
    version = '1.0'
}

wrapper {
    gradleVersion = '6.3'
}

// Define the main class for the application
mainClassName = 'Main'
